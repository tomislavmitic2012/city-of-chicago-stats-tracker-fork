<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <beans:import resource="classpath:spring/applicationContext.xml"/>

    <authentication-manager id="authenticationManager">
        <authentication-provider user-service-ref="userDao">
            <password-encoder ref="passwordEncoder"></password-encoder>
        </authentication-provider>
    </authentication-manager>

    <http
            realm="Protected API"
            use-expressions="true"
            auto-config="false"
            create-session="stateless"
            entry-point-ref="unauthorizedEntryPoint"
            authentication-manager-ref="authenticationManager">
        <custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
        <intercept-url pattern="/authenticate" access="permitAll" />
        <intercept-url method="GET" pattern="/users/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url method="POST" pattern="/users/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url method="GET" pattern="/soda/**" access="hasRole('ROLE_USER')" />
        <intercept-url method="GET" pattern="/mongo/**" access="hasRole('ROLE_USER')" />
        <intercept-url method="GET" pattern="/favoriteDatasets/**" access="hasRole('ROLE_USER')" />
        <intercept-url method="POST" pattern="/favoriteDatasets/**" access="hasRole('ROLE_USER')" />
        <intercept-url method="GET" pattern="/alerts/**" access="hasRole('ROLE_USER')" />
        <intercept-url method="POST" pattern="/alerts/**" access="hasRole('ROLE_USER')" />
    </http>
</beans:beans>